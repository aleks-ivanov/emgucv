<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <TargetFramework>net9.0-maccatalyst</TargetFramework>
    <Nullable>enable</Nullable>
    <ImplicitUsings>true</ImplicitUsings>
    <IsBindingProject>true</IsBindingProject>	
    <AssemblyName>Emgu.CV.runtime.maui.macos</AssemblyName>
    <GenerateDocumentationFile>True</GenerateDocumentationFile>
	<OpenCVBinaryDir>$([System.IO.Path]::GetFullPath($(MSBuildThisFileDirectory)..\..\..\libs))</OpenCVBinaryDir>
    <EmguCVCatalystBinaryDir>$(OpenCVBinaryDir)\iOS</EmguCVCatalystBinaryDir>
    <EmguCVCatalystNativeFileX64>$(EmguCVCatalystBinaryDir)\libcvextern_catalyst_x86_64.a</EmguCVCatalystNativeFileX64>
    <EmguCVCatalystNativeFileARM64>$(EmguCVCatalystBinaryDir)\libcvextern_catalyst_arm64.a</EmguCVCatalystNativeFileARM64>
    <EmguCVLinkTarget>MAUI MacCatalyst Library</EmguCVLinkTarget>
    <EmguCVMauiMacErrorMessage Condition="!Exists('$(EmguCVCatalystNativeFileX64)')">This package do not contains necessary binary for $(EmguCVLinkTarget). Emgu CV for MacOS Commercial license is required, Mac Catalyst x86_64 is targeted, but file $(EmguCVCatalystNativeFileX64) is missing.</EmguCVMauiMacErrorMessage>
    <EmguCVMauiMacErrorMessage Condition="!Exists('$(EmguCVCatalystNativeFileARM64)')">This package do not contains necessary binary for $(EmguCVLinkTarget). Emgu CV for MacOS Commercial license is required, Mac Catalyst ARM64 is targeted, but file $(EmguCVCatalystNativeFileARM64) is missing.</EmguCVMauiMacErrorMessage>
    <BaseOutputPath>$(OpenCVBinaryDir)\Build\$(AssemblyName)\$(Platform)\</BaseOutputPath>
    </PropertyGroup>

  <ItemGroup>
    <ObjcBindingApiDefinition Include="ApiDefinition.cs" />
    <ObjcBindingCoreSource Include="StructsAndEnums.cs" />
  </ItemGroup>

  <ItemGroup>
    <Compile Include="$(MSBuildThisFileDirectory)..\..\..\Emgu.CV.NativeImage\CGImageExtension.cs">
      <Link>CGImageExtension.cs</Link>
    </Compile>
    <Compile Include="$(MSBuildThisFileDirectory)..\..\..\Emgu.CV.NativeImage\UIImageExtension.cs">
      <Link>UIImageExtension.cs</Link>
    </Compile>
    <Compile Include="$(MSBuildThisFileDirectory)..\..\..\Emgu.CV.NativeImage\NSImageExtension.cs">
      <Link>NSImageExtension.cs</Link>
    </Compile>
	<Compile Include="$(MSBuildThisFileDirectory)..\..\..\Emgu.CV.NativeImage\CIImageExtension.cs" Link="CIImageExtension.cs" />
	<Compile Include="$(MSBuildThisFileDirectory)..\iOS\CvInvokeIOS.cs" Link="CvInvokeIOS.cs" />
  </ItemGroup>
    <ItemGroup Condition="Exists('$(EmguCVCatalystNativeFileX64)')">
      <NativeReference Include="$(EmguCVCatalystNativeFileX64)">
        <Kind>Static</Kind>
        <SmartLink>True</SmartLink>
	<ForceLoad>True</ForceLoad>
	<IsCxx>True</IsCxx>
	<LinkerFlags>-stdlib=libc++ -ObjC -lc++</LinkerFlags>
        <Frameworks>Foundation Accelerate CoreFoundation CoreGraphics AssetsLibrary AVFoundation CoreImage CoreMedia CoreVideo QuartzCore ImageIO UIKit CoreText</Frameworks>
      </NativeReference>
    </ItemGroup>
    <ItemGroup Condition="Exists('$(EmguCVCatalystNativeFileARM64)')">
      <NativeReference Include="$(EmguCVCatalystNativeFileARM64)">
        <Kind>Static</Kind>
        <SmartLink>True</SmartLink>
	<ForceLoad>True</ForceLoad>
	<IsCxx>True</IsCxx>
	<LinkerFlags>-stdlib=libc++ -ObjC -lc++</LinkerFlags>
        <Frameworks>Foundation Accelerate CoreFoundation CoreGraphics AssetsLibrary AVFoundation CoreImage CoreMedia CoreVideo QuartzCore ImageIO UIKit CoreText</Frameworks>
      </NativeReference>
    </ItemGroup>
    <ItemGroup>
      <ProjectReference Include="..\..\..\Emgu.CV\NetStandard\Emgu.CV.csproj" />
    </ItemGroup>
  <Target Name="DeployBinary" AfterTargets="AfterBuild">
    <Warning Text="'$(EmguCVMauiMacErrorMessage)'" Condition="'$(EmguCVMauiMacErrorMessage)'!=''" />
    <Message Text="Copying $(OutputPath)$(AssemblyName).dll, $(OutputPath)$(AssemblyName).xml to $(OpenCVBinaryDir)" Importance="high" />
    <Copy SourceFiles="$(OutputPath)$(AssemblyName).dll" DestinationFolder="$(OpenCVBinaryDir)" ContinueOnError="true" />
    <Copy SourceFiles="$(OutputPath)$(AssemblyName).xml" DestinationFolder="$(OpenCVBinaryDir)" ContinueOnError="true" />
  </Target>
</Project>
